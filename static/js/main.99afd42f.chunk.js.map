{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","ul","margin","padding","li","listStyle","appBar","borderBottom","palette","divider","toolbar","flexWrap","toolbarTitle","flexGrow","link","spacing","heroContent","cardHeader","backgroundColor","type","grey","cardPricing","display","justifyContent","alignItems","marginBottom","footer","borderTop","marginTop","paddingTop","paddingBottom","breakpoints","up","paper","flexDirection","avatar","secondary","main","submit","footers","GitHub","this","client_id","client_secret","user","fetch","infoResponse","json","info","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","UsernameInput","_handleKeyDown","e","key","handleClick","state","data","event","setState","target","value","userText","github","getUser","then","message","document","getElementById","innerHTML","login","avatar_url","name","email","public_repos","followers","following","company","location","bio","html_url","TextField","onChange","handle","bind","onKeyDown","fullWidth","id","label","autoFocus","Button","onClick","className","Component","App","classes","Fragment","CssBaseline","AppBar","position","elevation","Toolbar","noWrap","Container","component","maxWidth","gutterBottom","Grid","container","justify","map","item","xs","sm","title","description","Box","mt","Boolean","window","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.99afd42f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport AppBar from '@material-ui/core/AppBar';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport TextField from '@material-ui/core/TextField';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\n\n const useStyles = makeStyles(theme => ({\n  '@global': {\n    ul: {\n      margin: 0,\n      padding: 0,\n    },\n    li: {\n      listStyle: 'none',\n    },\n  },\n  appBar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbar: {\n    flexWrap: 'wrap',\n  },\n  toolbarTitle: {\n    flexGrow: 1,\n  },\n  link: {\n    margin: theme.spacing(1, 1.5),\n  },\n  heroContent: {\n    padding: theme.spacing(3, 0, 6),\n  },\n  cardHeader: {\n    backgroundColor:\n      theme.palette.type === 'dark' ? theme.palette.grey[700] : theme.palette.grey[200],\n  },\n  cardPricing: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'baseline',\n    marginBottom: theme.spacing(2),\n  },\n  footer: {\n    borderTop: `1px solid ${theme.palette.divider}`,\n    marginTop: theme.spacing(3),\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    [theme.breakpoints.up('sm')]: {\n      paddingTop: theme.spacing(3),\n      paddingBottom: theme.spacing(3),\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'left',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\nconst footers = [\n\n];\n\nclass GitHub {\n  constructor() {\n    this.client_id = 'e989261b2b0e141fd509';\n    this.client_secret = '308a04f83032c80a4fb8c50ffa055899901a4d72';\n  }\n  async getUser(user){\n    const infoResponse = await fetch(`https://api.github.com/users/${user}?client_id=${this.client_id}&client_secret=${this.client_secret}`);\n    const info = await infoResponse.json();\n\n    return {\n      info\n    }\n  }\n}\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Get_Github_user_info\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\n\nclass UsernameInput extends Component {\n\n  constructor(){\n    super();\n    this.state = {\n      data:'',\n    }\n  }\n\n  handle(event){\n    this.setState({\n      data:event.target.value,\n    })\n  }\n\n  handleClick(e){\n\n    const userText = this.state.data;\n    const github = new GitHub();\n\n    if(userText !== ''){\n      //make http call\n\n      github.getUser(userText)\n      .then(data => {\n        if(data.info.message === 'Not Found'){\n          //show alert\n          document.getElementById('profile').innerHTML = `Username: Not Found`;\n        } else {\n          document.getElementById('profile').innerHTML = `\n          <div class=\"panel panel-default\">\n            <div class=\"panel-heading\">\n              <h2 class=\"panel-title\">${data.info.login}</h2>\n            </div>\n            <div class=\"panel-body\">\n              <div class = \"row\">\n                <div class = \"column\">\n                  <img src=\"${data.info.avatar_url}\" alt=\"No pic\"> <br />\n                </div>\n                <div class = \"column\" style=\"padding-left:15px\"><font size=\"3\">\n                  \n                  <strong>Name:</strong> ${data.info.name} <br />\n                  <strong>Email:</strong> ${data.info.email} <br />\n                  <strong>No. Repository:</strong> ${data.info.public_repos} <br />\n                  <strong>No. Follers:</strong> ${data.info.followers} <br />\n                  <strong>No. Following:</strong> ${data.info.following} <br />\n                  <strong>Company:</strong> ${data.info.company} <br />\n                  <strong>Location:</strong> ${data.info.location} <br />\n                  <strong>Bio:</strong> ${data.info.bio} <br />\n                  <strong>URL:</strong> <a href=\"${data.info.html_url}\">${data.info.html_url}</a></font>\n                </div>\n\n              </div>\n            </div>\n          </div>`;\n        }\n      })\n    } else {\n      //Clear profile.\n      document.getElementById('profile').innerHTML = '';\n    }\n  }\n\n  _handleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      this.handleClick(e);\n    }\n  }\n\n  render(){\n    return (\n      <div>\n      <TextField type=\"text\" onChange={ this.handle.bind(this) } \n            onKeyDown={ this._handleKeyDown.bind(this) }\n            variant=\"outlined\" margin=\"normal\" fullWidth\n            id=\"Username\"\n            label=\"Enter a Github Username\"\n            name=\"Username\" \n            autoFocus/>\n      <Button onClick={ this.handleClick.bind(this) } fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className = {makeStyles(theme => ({\n              submit: {\n                margin: theme.spacing(3, 0, 2),\n              },\n            })).submit}>Search</Button>\n      </div>\n    );\n  }\n\n}\n\n\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <noscript>You need to enable JavaScript to run this app.</noscript>\n      <CssBaseline />\n      <AppBar position=\"static\" color=\"default\" elevation={0} className={classes.appBar}>\n        <Toolbar className={classes.toolbar}>\n          <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.toolbarTitle}>\n            MINI Project\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      <Container component=\"main\" maxWidth=\"sm\" className={classes.heroContent}>\n        <CssBaseline />\n\n        <div className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n            Search GitHub Users\n          </Typography>\n          <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" component=\"p\">\n            Enter a Github username to get the User's information.\n          </Typography><br />\n          <UsernameInput />\n        </div>\n        <br />\n\n        <div id=\"profile\">\n        </div>\n   \n\n      </Container>\n\n      <Container maxWidth=\"md\" component=\"footer\" className={classes.footer}>\n        <Grid container spacing={4} justify=\"space-evenly\">\n          {footers.map(footer => (\n            <Grid item xs={6} sm={3} key={footer.title}>\n              <Typography variant=\"h6\" color=\"textPrimary\" gutterBottom>\n                {footer.title}\n              </Typography>\n              <ul>\n                {footer.description.map(item => (\n                  <li key={item}>\n                    <Link href=\"#\" variant=\"subtitle1\" color=\"textSecondary\">\n                      {item}\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n            </Grid>\n          ))}\n        </Grid>\n        <Box mt={2}>\n          <Copyright />\n        </Box>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}